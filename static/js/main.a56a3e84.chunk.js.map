{"version":3,"sources":["components/Drink/index.js","utils/mapMeasuresToIngredients.js","utils/fetchDrinkData.js","components/DrinkModal/index.js","components/Loader/index.js","hooks/usePersistedState.js","constants/alcoholicOptions.js","components/FilterByAlcohol/index.js","components/Filters/index.js","hooks/useCocktailsList.js","utils/observe.js","app/index.js","reportWebVitals.js","index.js"],"names":["Drink","drink","onDrinkClick","idDrink","strDrinkThumb","strDrink","className","onClick","src","alt","mapMeasuresToIngredients","ingredientsArray","strIngredient1","Object","entries","forEach","key","value","includes","ingredientIndex","replace","ingredientMeasure","push","fetchDrinkData","id","callback","a","fetch","then","response","json","drinks","DrinkModal","onClose","useState","drinkData","setDrinkData","useEffect","strInstructions","ingredients","Modal","open","disableAutoFocus","map","name","measure","Loader","usePersistedState","defaultValue","JSON","parse","localStorage","getItem","state","setState","setItem","stringify","alcoholicOptions","FilterByAlcohol","onChange","FormControl","component","RadioGroup","row","option","FormControlLabel","control","Radio","color","label","Filters","onSearch","setIsLazyLoading","isFiltered","isFilterByName","setIsFilterByName","inputValue","setInputValue","radioValue","setRadioValue","searchByName","searchByAlcohol","alcohol","Tooltip","title","IconButton","edge","TextField","fullWidth","event","target","placeholder","onKeyPress","ev","preventDefault","useCocktailsList","cocktailsList","setCocktailsList","loadNewCocktails","loadRandomDrink","newDrink","some","loadDrinksByNameQuery","query","drinksList","loadDrinksByAlcohol","params","i","observe","observer","IntersectionObserver","entities","isIntersecting","rootMargin","threshold","CocktailsApp","modalData","setModalData","isLazyLoading","loader","useRef","current","fontSize","length","ref","style","display","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a56a3e84.chunk.js","sourcesContent":["import './index.scss';\r\nimport React from 'react';\r\n\r\nconst Drink = ({ drink, onDrinkClick }) => {\r\n    const { idDrink, strDrinkThumb, strDrink } = drink;\r\n\r\n    return (\r\n        <div\r\n            key={idDrink}\r\n            className=\"drink__container\"\r\n            onClick={onDrinkClick}\r\n        >\r\n            <img src={strDrinkThumb} alt={strDrink} className=\"drink__img\"/>\r\n            <div className=\"drink__hover-container\">\r\n                <div className=\"drink__hover-name\">\r\n                    {strDrink}\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Drink;","const mapMeasuresToIngredients = (drink) => {\r\n    const ingredientsArray = [];\r\n\r\n    if (!drink.strIngredient1) {\r\n        return ingredientsArray;\r\n    }\r\n\r\n    Object.entries(drink).forEach(([key, value]) => {\r\n        if (value && key.includes('strIngredient')) {\r\n            const ingredientIndex = key.replace('strIngredient', '');\r\n            const ingredientMeasure = drink['strMeasure' + ingredientIndex];\r\n            ingredientsArray.push([value, ingredientMeasure]);\r\n        }\r\n    })\r\n\r\n    return ingredientsArray;\r\n}\r\n\r\nexport default mapMeasuresToIngredients;","const fetchDrinkData = async (id, callback) => {\r\n    const drink = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/lookup.php?i=${id}`)\r\n        .then(response => response.json())\r\n        .then(({ drinks }) => drinks[0]);\r\n\r\n    callback(drink);\r\n}\r\n\r\nexport default fetchDrinkData;","import './index.scss';\r\nimport React, { useEffect, useState } from 'react';\r\nimport Modal from \"@material-ui/core/Modal\";\r\nimport mapMeasuresToIngredients from \"../../utils/mapMeasuresToIngredients\";\r\nimport fetchDrinkData from \"../../utils/fetchDrinkData\";\r\n\r\nconst DrinkModal = ({ drink, onClose }) => {\r\n    const [drinkData, setDrinkData] = useState({ ...drink });\r\n\r\n    useEffect(() => {\r\n        if (!!drink && !drink.strInstructions) {\r\n            fetchDrinkData(drink.idDrink, setDrinkData);\r\n            return;\r\n        }\r\n        setDrinkData({ ...drink });\r\n    }, [drink]);\r\n\r\n    const { strDrinkThumb, strDrink, strInstructions } = drinkData;\r\n    const ingredients = mapMeasuresToIngredients(drinkData);\r\n\r\n    return (\r\n        <Modal\r\n            className=\"modal\"\r\n            open={!!drink}\r\n            onClose={onClose}\r\n            disableAutoFocus\r\n        >\r\n            <div\r\n                className=\"modal__container\"\r\n            >\r\n                <div className=\"modal__img-container\">\r\n                    <img src={strDrinkThumb} alt={strDrink} className=\"modal__img\"/>\r\n                </div>\r\n                <div className=\"modal__description\">\r\n                    <div className=\"modal__ingredients\">\r\n                        <h2 className=\"modal__drink-name\">\r\n                            {strDrink}\r\n                        </h2>\r\n                        <ul>\r\n                            {ingredients.map(([name, measure]) => (\r\n                                <li key={name}><b>{name}</b>: {measure}</li>\r\n                            ))}\r\n                        </ul>\r\n                    </div>\r\n                    <div className=\"modal__instruction-container\">\r\n                        <p className=\"modal__instruction\">{strInstructions}</p>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </Modal>\r\n    );\r\n};\r\n\r\nexport default DrinkModal;","import './index.scss';\r\nimport React from 'react';\r\n\r\nconst Loader = () => {\r\n    return (\r\n        <div className=\"loader\">\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n            <div/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Loader;","import { useState, useEffect } from 'react';\r\n\r\nconst usePersistedState = (key, defaultValue) => {\r\n    const [state, setState] = useState(\r\n        () => JSON.parse(localStorage.getItem(key)) || defaultValue\r\n    );\r\n    useEffect(() => {\r\n        localStorage.setItem(key, JSON.stringify(state));\r\n    }, [key, state]);\r\n    return [state, setState];\r\n}\r\n\r\nexport default usePersistedState;","const alcoholicOptions = [\r\n    \"Alcoholic\",\r\n    \"Non alcoholic\",\r\n    \"Optional alcohol\"\r\n]\r\n\r\nexport default alcoholicOptions;","import './index.scss';\r\nimport React from 'react';\r\nimport Radio from '@material-ui/core/Radio';\r\nimport RadioGroup from '@material-ui/core/RadioGroup';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport alcoholicOptions from \"../../constants/alcoholicOptions\";\r\n\r\nconst FilterByAlcohol = ({ value, onChange }) => {\r\n    return (\r\n        <FormControl className=\"alcohol-filter__container\" component=\"fieldset\">\r\n            <RadioGroup className=\"alcohol-filter__radio-group\" row name=\"gender1\" value={value} onChange={onChange}>\r\n                {alcoholicOptions.map(option => (\r\n                    <FormControlLabel\r\n                        key={option}\r\n                        value={option.replace(' ', '_')}\r\n                        control={<Radio color=\"default\"/>}\r\n                        label={option}\r\n                    />\r\n                ))}\r\n            </RadioGroup>\r\n        </FormControl>\r\n    );\r\n};\r\n\r\nexport default FilterByAlcohol;","import './index.scss';\r\nimport React, { useEffect } from 'react';\r\nimport usePersistedState from \"../../hooks/usePersistedState\";\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SwapVertIcon from '@material-ui/icons/SwapVert';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nimport FilterByAlcohol from \"../FilterByAlcohol\";\r\n\r\nconst Filters = ({ onSearch, setIsLazyLoading, isFiltered }) => {\r\n    const [isFilterByName, setIsFilterByName] = usePersistedState('isFilterByName',true);\r\n    const [inputValue, setInputValue] = usePersistedState('inputValue', '');\r\n    const [radioValue, setRadioValue] = usePersistedState('radioValue', '');\r\n\r\n    useEffect(() => {\r\n        if (inputValue) {\r\n            searchByName();\r\n        }\r\n        if (radioValue) {\r\n            searchByAlcohol(radioValue);\r\n        }\r\n    }, []);\r\n\r\n    const toggleActiveFilters = () => {\r\n        setIsFilterByName(state => !state);\r\n    };\r\n\r\n    const handleInputChange = (event) => {\r\n        setInputValue(event.target.value);\r\n    };\r\n\r\n    const searchByName = () => {\r\n        onSearch({ name: inputValue });\r\n\r\n        setRadioValue('');\r\n        setIsLazyLoading(false);\r\n    };\r\n\r\n    const onInputKeyPress = (ev) => {\r\n        if (ev.key === 'Enter') {\r\n            ev.preventDefault();\r\n            searchByName();\r\n        }\r\n    };\r\n\r\n    const searchReset = () => {\r\n        setInputValue('');\r\n\r\n        if (!isFiltered) return;\r\n\r\n        onSearch();\r\n        setIsLazyLoading(true);\r\n    };\r\n\r\n    const searchByAlcohol = (radioValue) => {\r\n        onSearch({ alcohol: radioValue });\r\n\r\n        setInputValue('');\r\n        setIsLazyLoading(false);\r\n    };\r\n\r\n    const handleRadioChange = (event) => {\r\n        setRadioValue(event.target.value);\r\n\r\n        searchByAlcohol(event.target.value);\r\n    };\r\n\r\n    return (\r\n        <div className=\"filters__container\">\r\n            <div className=\"filters__icon-button\">\r\n                <Tooltip title=\"Change filters\">\r\n                    <IconButton\r\n                        color=\"primary\"\r\n                        edge=\"start\"\r\n                        onClick={toggleActiveFilters}\r\n                    >\r\n                        <SwapVertIcon className=\"filters__swap-icon\"/>\r\n                    </IconButton>\r\n                </Tooltip>\r\n            </div>\r\n            <div className=\"filters__input\">\r\n                {isFilterByName ?\r\n                    <TextField\r\n                        fullWidth\r\n                        value={inputValue}\r\n                        onChange={handleInputChange}\r\n                        placeholder=\"Search by name...\"\r\n                        onKeyPress={onInputKeyPress}\r\n                    />\r\n                    :\r\n                    <FilterByAlcohol\r\n                        value={radioValue}\r\n                        onChange={handleRadioChange}\r\n                    />\r\n                }\r\n            </div>\r\n            {(isFilterByName && inputValue) && (\r\n                <div className=\"filters__icon-button\">\r\n                    <IconButton\r\n                        color=\"primary\"\r\n                        edge=\"end\"\r\n                        onClick={searchReset}\r\n                    >\r\n                        <ClearIcon className=\"filters__search-icon\"/>\r\n                    </IconButton>\r\n                </div>\r\n            )}\r\n            <div className=\"filters__icon-button\">\r\n                <IconButton\r\n                    color=\"primary\"\r\n                    edge=\"end\"\r\n                    onClick={searchByName}\r\n                >\r\n                    <SearchIcon className=\"filters__search-icon\"/>\r\n                </IconButton>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Filters;","import { useState, useEffect } from 'react';\r\n\r\nconst useCocktailsList = () => {\r\n    const [cocktailsList, setCocktailsList] = useState([]);\r\n\r\n    useEffect(() => {\r\n        loadNewCocktails();\r\n    }, []);\r\n\r\n    const loadRandomDrink = async () => {\r\n        const newDrink = await fetch('https://www.thecocktaildb.com/api/json/v1/1/random.php')\r\n            .then(response => response.json())\r\n            .then(({ drinks }) => drinks[0]);\r\n\r\n        setCocktailsList(state => {\r\n            if (state.some(drink => drink.idDrink === newDrink.idDrink)) {\r\n                loadRandomDrink();\r\n                return [...state];\r\n            }\r\n\r\n            return [...state, newDrink];\r\n        });\r\n    };\r\n\r\n    const loadDrinksByNameQuery = async (query) => {\r\n        const drinksList = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/search.php?s=${query}`)\r\n            .then(response => response.json())\r\n            .then(({ drinks }) => drinks || []);\r\n\r\n        setCocktailsList(drinksList);\r\n    };\r\n\r\n    const loadDrinksByAlcohol = async (alcohol) => {\r\n        const drinksList = await fetch(`https://www.thecocktaildb.com/api/json/v1/1/filter.php?a=${alcohol}`)\r\n            .then(response => response.json())\r\n            .then(({ drinks }) => drinks || []);\r\n\r\n        setCocktailsList(drinksList);\r\n    };\r\n\r\n    const loadNewCocktails = (params = {}) => {\r\n        const { name, alcohol } = params;\r\n\r\n        if (!name && !alcohol) {\r\n            for (let i = 1; i <= 8; i++) {\r\n                loadRandomDrink();\r\n            }\r\n            return;\r\n        }\r\n\r\n        if (name) {\r\n            loadDrinksByNameQuery(name);\r\n            return;\r\n        }\r\n\r\n        if (alcohol) {\r\n            loadDrinksByAlcohol(alcohol);\r\n        }\r\n    };\r\n\r\n    return [cocktailsList, loadNewCocktails];\r\n}\r\n\r\nexport default useCocktailsList;","const observe = (target, callback) => {\r\n    const handleObserver = (entities) => {\r\n        const currTarget = entities[0];\r\n        if (currTarget.isIntersecting) {\r\n            callback();\r\n        }\r\n    }\r\n\r\n    const observer = new IntersectionObserver(handleObserver, {\r\n        rootMargin: '3%',\r\n        threshold: 0.9\r\n    });\r\n\r\n    if (target) {\r\n        observer.observe(target);\r\n    }\r\n}\r\n\r\nexport default observe;","import './index.scss';\nimport React, { useEffect, useRef, useState } from \"react\";\nimport LocalBarIcon from '@material-ui/icons/LocalBar';\nimport Drink from \"../components/Drink\";\nimport DrinkModal from \"../components/DrinkModal\";\nimport Loader from \"../components/Loader\";\nimport Filters from \"../components/Filters\";\nimport useCocktailsList from \"../hooks/useCocktailsList\";\nimport observe from \"../utils/observe\";\n\nconst CocktailsApp = () => {\n    const [cocktailsList, setCocktailsList] = useCocktailsList();\n    const [modalData, setModalData] = useState(false);\n    const [isLazyLoading, setIsLazyLoading] = useState(true);\n\n    const loader = useRef(null);\n    useEffect(() => {\n        observe(loader.current, setCocktailsList);\n    }, []);\n\n    return (\n        <div className=\"cocktails cocktails__container\">\n            <div className=\"cocktails__logo-container\">\n                <LocalBarIcon\n                    className=\"cocktails__logo\"\n                    fontSize=\"small\"\n                />\n            </div>\n            <DrinkModal\n                drink={modalData}\n                onClose={() => setModalData(false)}\n            />\n            <div className=\"cocktails__filters\">\n                <Filters\n                    onSearch={setCocktailsList}\n                    setIsLazyLoading={setIsLazyLoading}\n                    isFiltered={!isLazyLoading}\n                />\n            </div>\n            <div className=\"cocktails__list\">\n                {!cocktailsList.length && (\n                    <p className=\"cocktails__nothing\">Nothing was found...</p>\n                )}\n                {cocktailsList.map(drink => (\n                    <Drink\n                        key={drink.idDrink}\n                        drink={drink}\n                        onDrinkClick={() => setModalData(drink)}\n                    />\n                ))}\n            </div>\n            <div\n                className=\"cocktails__loader\"\n                ref={loader}\n                style={{ display: isLazyLoading ? 'block' : 'none' }}\n            >\n                <Loader/>\n            </div>\n        </div>\n    );\n}\n\nexport default CocktailsApp;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport CocktailsApp from './app';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <CocktailsApp />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}